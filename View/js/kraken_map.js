var map = L.map('map').setView([42.87093, 74.60335], 13);
var count = 1;
L.tileLayer('http://{s}.tile.cloudmade.com/3a5a93b0788845f59038e598884ecdad/92017/256/{z}/{x}/{y}.png', {
	maxZoom: 18,
	attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery В© <a href="http://cloudmade.com">CloudMade</a>'
}).addTo(map);

/*var cloudmadeUrl = 'http://{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.jpg';
var subDomains = ['otile1','otile2','otile3','otile4'];
var cloudmadeAttrib = 'Data, imagery and map information provided by <a href="http://open.mapquest.co.uk" target="_blank">MapQuest</a>, <a href="http://www.openstreetmap.org/" target="_blank">OpenStreetMap</a> and contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/" target="_blank">CC-BY-SA</a>';
var cloudmade = new L.TileLayer(cloudmadeUrl, {maxZoom: 18, attribution: cloudmadeAttrib, subdomains: subDomains});

var bishkek = new L.LatLng(42.87093, 74.60335);

var map = new L.Map('map', {center: bishkek, zoom: 13, layers : [cloudmade]});
*/
var myMarkers = new Array();

marker = L.marker([42.87593, 74.60135]).addTo(map)
	.bindPopup("<b>Hello world!</b><br />I am a popup.").openPopup();
myMarkers.push(marker);

marker = L.marker([42.87893, 74.60235]).addTo(map)
	.bindPopup("<b>Hello world!</b><br />I am a popup.").openPopup();
myMarkers.push(marker);

marker = L.marker([42.87293, 74.60435]).addTo(map)
	.bindPopup("<b>Hello world!</b><br />I am a popup.").openPopup();
myMarkers.push(marker);

popup = L.popup();

var click_cheker = 0;

function startTime()
{
	var tm = new Date();
	var h = tm.getHours();
	var m = tm.getMinutes();
	var s = tm.getSeconds();
	m = checkTime(m);
	s = checkTime(s);
	document.getElementById("hour").innerHTML = h;
	document.getElementById("min").innerHTML =  m;
	t = setTimeout('startTime()',500);
}
function checkTime(i)
{
	if (i<10)
	{
		i = "0" + i;
	}
    return i;
}

// Generated by CoffeeScript 1.7.1
var update_news = (function() {
	var httpGet, i, jsonArr, url, _i, _len;

	httpGet = function(theUrl) {
		var xmlHttp;
		xmlHttp = null;
		xmlHttp = new XMLHttpRequest();
		xmlHttp.open("GET", theUrl, false);
		xmlHttp.send(null);
		return xmlHttp.responseText;
	};

	url = "../../~chyngyz/api";

	jsonArr = JSON.parse(httpGet(url));

	var feed = document.getElementById("feedForm");
	var for_feed = "";
	var for_temp = "";
	for (_i = 0, _len = jsonArr.length; _i < _len; _i++)
	{
		i = jsonArr[_i];
		for_feed += '<br>';
		for_feed += '<div class="titleContainer">' + i['title'];
		for_feed += '<div class="titleTime">' + i['title_time'] + '</div>';
		for_feed += '</div>';
		for_feed += '<div class="newsItem">';
		for_feed += '<br>';
		for_feed += i['news_item']
		for_feed += '<br><br>' + i['place']
		for_feed += i['_when']
		for_feed += '</div>';
		
		for_feed += for_temp;
		for_temp = for_feed;
		for_feed = ""; 
	}
	feed.innerHTML=for_temp;

});
/*CoffeeScript end*/

update_news();

var k_lat =document.getElementById('longitude')
var k_lng =document.getElementById('latitude')

function onMapClick(e)
{
	if (click_cheker === 1)
	{

		var lat = (e.latlng.lat);
		var lng = (e.latlng.lng);
		k_lat.value = lat;
		k_lng.value = lng;
	/*	if (count === 1)
		{
			marker = new L.marker(e.latlng, {id:1}).addTo(map)
				.bindPopup("<b>Р­С‚Рѕ РїСЂРѕРёР·РѕС€Р»Рѕ</b><br />Р·РґРµСЃСЊ.").openPopup();
			count+=1;
		} 
		else
		{*/
			var newLatLng = new L.LatLng(lat, lng);
			marker.setLatLng(newLatLng).addTo(map)
				.bindPopup("<b>Choose</b><br />placse on map.<br><button type=\"button\" id=\"report\" onclick=\"submit()\">РЎРѕРѕР±С‰РёС‚СЊ!</button>").openPopup();
		//};
		//myMarkers .push(marker);
	};
};

function submit ()
{
	vex.defaultOptions.className = 'vex-theme-flat-attack';
	vex.dialog.buttons.YES.text = "РЎРѕРѕР±С‰РёС‚СЊ!";
	vex.dialog.buttons.NO.text = "РћС‚РјРµРЅР°";
	var todayDateString;

	todayDateString = new Date().toJSON().slice(0, 10);

	vex.dialog.open(
	{
		message: 'РџРѕР¶Р°Р»СѓР№СЃС‚Р°, РѕРїРёС€РёС‚Рµ РїСЂРµСЃС‚СѓРїР»РµРЅРёРµ',
		input: "<style>\n    .vex-custom-field-wrapper {\n        margin: 1em 0;\n    }\n    .vex-custom-field-wrapper > label {\n        display: inline-block;\n        margin-bottom: .2em;\n    }\n</style>\n <div class=\"vex-custom-field-wrapper\">\n    <label for=\"category\">РљР°С‚РµРіРѕСЂРёСЏ</label>\n <div class=\"vex-custom-input-wrapper\">\n <input name=\"category\" type=\"text\" placeholder=\"РљР°С‚РµРіРѕСЂРёСЏ\" required />\n <div class=\"vex-custom-field-wrapper\">\n    <label for=\"address\">РђРґСЂРµСЃ</label>\n <div class=\"vex-custom-input-wrapper\">\n <input name=\"address\" type=\"text\" placeholder=\"РђРґСЂРµСЃ\" required />\n <div class=\"vex-custom-field-wrapper\">\n    <label for=\"comment\">РљРѕРјРјРµРЅС‚Р°СЂРёР№</label>\n <div class=\"vex-custom-input-wrapper\">\n <input name=\"comment\" type=\"text\" placeholder=\"РљРѕРјРјРµРЅС‚Р°СЂРёР№\" required /> <div class=\"vex-custom-field-wrapper\">\n    <label for=\"date\">Р”Р°С‚Р°</label>\n    <div class=\"vex-custom-input-wrapper\">\n        <input name=\"date\" type=\"date\" value=\"" + todayDateString + "\" />\n  </div>\n</div>",
		callback: function(data)
		{
			if (data === false) 
			{
			  return console.log('Cancelled');
			}
			console.log('Date', data.date);
			return $('.demo-result-custom-vex-dialog').show().html("<h4>Result</h4>\n<p>\n    Date: <b>" + data.date + "</b><br/>\n");
		}
	});
};

map.on('click', onMapClick);
